name: CI/CD Pipeline for Book Spot

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Bookspot2024
          MYSQL_DATABASE: Bookspot
        ports:
          - 3309:3306

      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Backend Dependencies
      working-directory: ./Backend-BookSpot
      run: mvn clean install -DskipTests

    - name: Run Backend Tests
      working-directory: ./Backend-BookSpot
      run: mvn test

    - name: Install Frontend Dependencies
      working-directory: ./Frontend-BookSpot
      run: npm install

    - name: Build Frontend
      working-directory: ./Frontend-BookSpot
      run: npm run build

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build-test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Images
      run: |
        docker-compose build

    - name: Push Docker Images to DockerHub
      run: |
        docker-compose push

    - name: Deploy to Server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << EOF
          docker-compose down
          docker-compose pull
          docker-compose up -d
        EOF
