name: Deploy to Docker Hub and Remote Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Bookspot2024
          MYSQL_DATABASE: Bookspot
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -pBookspot2024"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
      # Étape 1 : Vérifiez le code source
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Configure Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Étape 3 : Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 4 : Build and push Docker images
      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookspot-backend:latest ./Backend-BookSpot
          docker push ${{ secrets.DOCKER_USERNAME }}/bookspot-backend:latest

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/bookspot-frontend:latest ./Frontend-BookSpot
          docker push ${{ secrets.DOCKER_USERNAME }}/bookspot-frontend:latest

      # Étape 5 : Copier les fichiers vers le serveur distant
      - name: Copy project to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -r ./ user@192.168.1.86:/home/user/Project-Final-CDA

      # Étape 6 : Déployer sur le serveur distant
      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no user@192.168.1.86 << EOF
            docker pull ${{ secrets.DOCKER_USERNAME }}/bookspot-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/bookspot-frontend:latest
            cd /home/user/Project-Final-CDA
            docker-compose down
            docker-compose up -d
          EOF
